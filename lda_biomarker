clusters_lda=function(nbiomarkers){
  
  ########## set the variables correspond to biomarkers
  usedvariables=0
  if (nbiomarkers==0) usedvariables=4:18
  else if (nbiomarkers==3) usedvariables=c(4:18,19,20,22)
  else if (nbiomarkers==5) usedvariables=c(4:18,19,20,22,23,26)
  else if (nbiomarkers==9) usedvariables=c(4:18, 19,20 ,21, 22, 23, 24, 25, 26, 29)
  else if (nbiomarkers==14) usedvariables=c(4:32)
  else if (nbiomarkers=='40'){usedvariables=c(4:18,20)}
  else if (nbiomarkers=='6'){usedvariables=c(4:18,19)}
  else if (nbiomarkers=='NL'){usedvariables=c(4:18,22)}
  else {stop('wrong value given')}
  
  set.seed(1)
  
  ######load the data and normalize (according to choosen variables)
  data=read.csv('data.csv')


  data=data[,c(1:3,usedvariables)]
  data=data[complete.cases(data),]
  diseasetype=data[,1]
  data=data[,4:ncol(data)]
  data=as.data.frame(scale(data))
  print (paste (ncol(data), ' colnumes of data involved'))
  
  
  ########## perform a kmeans
  library(MASS)
  ## one can always perform an scrit plot to help determine the number of groups
  wss=(nrow(data)-1)*sum(apply(data,2,var))
  for (i in 2:15) {wss[i]<- sum (kmeans(data,centers=i)$withinss)}
  plot(1:15, wss, type="b", xlab="Number of Clusters",
       ylab="Within groups sum of squares")
  ### k means
  kmeans_result=kmeans(data,centers=3)
  print (kmeans_result)
  print (table(kmeans_result$cluster,diseasetype))
  
  
  ########## Linear discriminant analysis
  lda=lda(data,kmeans_result$cluster)
  lda_p=predict(lda)
  table(diseasetype,lda_p$class)
 print (lda)
 
  ########## Plotting
  plot(lda_p$x,col=c('red','blue','green')[lda_p$class],
       pch=c(1,2,3)[diseasetype],ylim=c(7,-5))
 
  legend(x=1.15,y=4.65,,col=c('green','blue','red'),
         legend=c('cluster 1','cluster 2','cluster 3'), 
         pch=c(15,15,15))
  legend('bottomright',  pch=c(1,2,3) ,
         legend=c('Asthma', 'COPD', 'ACOS') )

  title(paste('11112014--',as.character(nbiomarkers),'biomarker(s)    ','LDA from Kmeans clustering'))
}
